// Code generated by go-swagger; DO NOT EDIT.

package recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cstkpk/recipeRolodex/models"
)

// PostRecipeOKCode is the HTTP code returned for type PostRecipeOK
const PostRecipeOKCode int = 200

/*PostRecipeOK successful

swagger:response postRecipeOK
*/
type PostRecipeOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostRecipeOK creates PostRecipeOK with default headers values
func NewPostRecipeOK() *PostRecipeOK {

	return &PostRecipeOK{}
}

// WithPayload adds the payload to the post recipe o k response
func (o *PostRecipeOK) WithPayload(payload *models.ReturnCode) *PostRecipeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post recipe o k response
func (o *PostRecipeOK) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRecipeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRecipeBadRequestCode is the HTTP code returned for type PostRecipeBadRequest
const PostRecipeBadRequestCode int = 400

/*PostRecipeBadRequest bad request

swagger:response postRecipeBadRequest
*/
type PostRecipeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostRecipeBadRequest creates PostRecipeBadRequest with default headers values
func NewPostRecipeBadRequest() *PostRecipeBadRequest {

	return &PostRecipeBadRequest{}
}

// WithPayload adds the payload to the post recipe bad request response
func (o *PostRecipeBadRequest) WithPayload(payload *models.ReturnCode) *PostRecipeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post recipe bad request response
func (o *PostRecipeBadRequest) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRecipeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRecipeInternalServerErrorCode is the HTTP code returned for type PostRecipeInternalServerError
const PostRecipeInternalServerErrorCode int = 500

/*PostRecipeInternalServerError internal service error

swagger:response postRecipeInternalServerError
*/
type PostRecipeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostRecipeInternalServerError creates PostRecipeInternalServerError with default headers values
func NewPostRecipeInternalServerError() *PostRecipeInternalServerError {

	return &PostRecipeInternalServerError{}
}

// WithPayload adds the payload to the post recipe internal server error response
func (o *PostRecipeInternalServerError) WithPayload(payload *models.ReturnCode) *PostRecipeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post recipe internal server error response
func (o *PostRecipeInternalServerError) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRecipeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostRecipeDefault unexpected error

swagger:response postRecipeDefault
*/
type PostRecipeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ReturnCode `json:"body,omitempty"`
}

// NewPostRecipeDefault creates PostRecipeDefault with default headers values
func NewPostRecipeDefault(code int) *PostRecipeDefault {
	if code <= 0 {
		code = 500
	}

	return &PostRecipeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post recipe default response
func (o *PostRecipeDefault) WithStatusCode(code int) *PostRecipeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post recipe default response
func (o *PostRecipeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post recipe default response
func (o *PostRecipeDefault) WithPayload(payload *models.ReturnCode) *PostRecipeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post recipe default response
func (o *PostRecipeDefault) SetPayload(payload *models.ReturnCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRecipeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
