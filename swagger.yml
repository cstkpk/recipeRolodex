---
swagger: "2.0"
consumes:
  - application/json
produces:
  - application/json
info:
  title: recipe-rolodex
  version: 0.0.1
  description: Repository of recipe information
schemes:
  - http
basePath: /rolodex

paths:
  /ready:
    get:
      tags:
        - ready
      summary: verify that the API is running and ready to accept requests
      responses:
        200:
          description: post successful responses
          schema:
            $ref: "#/definitions/ReturnCode"
        500:
          description: internal service error
          schema:
            $ref: "#/definitions/ReturnCode"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/ReturnCode"
  /recipe:
    get:
      tags:
        - recipe
      summary: get details about a recipe
      description: |
        Retrieve details about a recipe given a recipeID
      parameters:
        - name: recipeID
          description: a recipe ID
          in: query
          required: true
          type: integer
      responses:
        200:
          description: successful
          schema:
            $ref: "#/definitions/Recipe"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/ReturnCode"
        404:
          description: not found
          schema:
            $ref: "#/definitions/ReturnCode"
        500:
          description: internal service error
          schema:
            $ref: "#/definitions/ReturnCode"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/ReturnCode"
    post:
      tags:
        - recipe
      summary: create a new recipe
      description: |
        Add a new set of recipe details to the database
      parameters:
        - name: newRecipe
          description: new recipe details
          in: body
          required: true
          schema:
            $ref: "#/definitions/NewRecipe"
      responses:
        200:
          description: successful
          schema:
            $ref: "#/definitions/ReturnCode"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/ReturnCode"
        500:
          description: internal service error
          schema:
            $ref: "#/definitions/ReturnCode"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/ReturnCode"
  /recipes:
    get:
      tags:
        - recipes
      summary: get a list of recipes
      description: |
        Retrieve a list of recipes based on the user-generated query
      parameters:
        - name: ingredient1
          description: an ingredient to filter recipes by
          in: query
          required: false
          type: string
          default: ""
        - name: ingredient2
          description: an ingredient to filter recipes by
          in: query
          required: false
          type: string
          default: ""
        - name: ingredient3
          description: an ingredient to filter recipes by
          in: query
          required: false
          type: string
          default: ""
        - name: season
          description: a season to filter recipes by
          in: query
          required: false
          type: string
          default: ""
      responses:
        200:
          description: successful
          schema:
            $ref: "#/definitions/Recipes"
        404:
          description: not found
          schema:
            $ref: "#/definitions/ReturnCode"
        500:
          description: internal service error
          schema:
            $ref: "#/definitions/ReturnCode"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/ReturnCode"

definitions:
  ReturnCode:
    type: object
    properties:
      code:
        type: integer
        readOnly: true
      message:
        type: string
        readOnly: true
  NewRecipe:
    type: object
    required:
      - season
      - title
      - author
      - link
      - ingredientList
    properties:
      season:
        type: string
      title:
        type: string
      author:
        type: string
      link:
        type: string
      ingredientList:
        type: array
        items:
          type: string
        example: ["apples", "bananas", "peaches"]
  Recipes:
    type: object
    properties:
      recipeList:
        type: array
        items:
          $ref: "#/definitions/Recipe"
  Recipe:
    type: object
    properties:
      id:
        type: integer
      season:
        type: string
      title:
        type: string
      author:
        type: string
      link:
        type: string
